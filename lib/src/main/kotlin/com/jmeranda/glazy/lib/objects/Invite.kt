package com.jmeranda.glazy.lib.objects

import com.fasterxml.jackson.annotation.JsonIgnore

data class Invite (
    override val id: Int,
    override val nodeId: String = String(),
    val repository: InviteRepo,
    val invitee: User,
    val inviter: User,
    val permissions: String,
    val createdAt: String,
    val url: String,
    val htmlUrl: String
) : GitObject(id, nodeId)

/**
 * Describes a github repository as displayed by a collaborator invite.
 */
data class InviteRepo(
        override val id: Int,
        override val nodeId: String,
        val allowMergeCommit: Boolean,
        val allowRebaseMerge: Boolean,
        val allowSquashMerge: Boolean,
        val archiveUrl: String? = null,
        val archived: Boolean,
        val assigneesUrl: String? = null,
        val blobsUrl: String? = null,
        val branchesUrl: String? = null,
        val cloneUrl: String? = null,
        val collaboratorsUrl: String,
        val commentsUrl: String,
        val commitsUrl: String,
        val compareUrl: String,
        val contentsUrl: String,
        val contributorsUrl: String,
        val createdAt: String? = null,
        val defaultBranch: String? = null,
        val deleteBranchOnMerge: Boolean? = null,
        val deploymentsUrl: String,
        val description: String? = null,
        val disabled: Boolean? = null,
        val downloadsUrl: String,
        val eventsUrl: String,
        val fork: Boolean,
        val forks: Int? = null,
        val forksCount: Int? = null,
        val forksUrl: String,
        val fullName: String,
        val gitCommitsUrl: String,
        val gitRefsUrl: String,
        val gitTagsUrl: String,
        val gitUrl: String? = null,
        val hasDownloads: Boolean? = null,
        val hasIssues: Boolean? = null,
        val hasPages: Boolean? = null,
        val hasProjects: Boolean? = null,
        val hasWiki: Boolean? = null,
        val homepage: String? = null,
        val hooksUrl: String,
        val htmlUrl: String,
        val issueCommentUrl: String,
        val issueEventsUrl: String,
        val issuesUrl: String,
        val isTemplate: Boolean? = null,
        val template: String? = null,
        val keysUrl: String,
        val labelsUrl: String,
        val language: String? = null,
        val languagesUrl: String,
        val license: License? = null,
        val mergesUrl: String,
        val milestonesUrl: String,
        val mirrorUrl: String? = null,
        val name: String,
        val networkCount: Int,
        val notificationsUrl: String,
        val openIssues: Int,
        val openIssuesCount: Int,
        val organization: Organization? = null,
        val owner: User,
        val permissions: Permissions? = null,
        val `private`: Boolean,
        val pullsUrl: String,
        val pushedAt: String? = null,
        val releasesUrl: String,
        val size: Int? = null,
        val sshUrl: String? = null,
        val stargazersCount: Int? = null,
        val stargazersUrl: String,
        val statusesUrl: String,
        val subscribersCount: Int? = null,
        val subscribersUrl: String,
        val subscriptionUrl: String,
        val svnUrl: String? = null,
        val tagsUrl: String,
        val teamsUrl: String,
        val tempCloneToken: String? = null,
        val templateRepository: Repo? = null,
        val treesUrl: String,
        val updatedAt: String? = null,
        val url: String,
        val visibility: String? = null,
        val watchers: Int? = null,
        val watchersCount: Int
) : GitObject(id, nodeId)